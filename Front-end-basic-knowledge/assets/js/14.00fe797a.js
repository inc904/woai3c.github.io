(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{381:function(t,r,a){"use strict";a.r(r);var e=a(40),s=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"前端安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端安全"}},[t._v("#")]),t._v(" 前端安全")]),t._v(" "),a("h2",{attrs:{id:"xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss"}},[t._v("#")]),t._v(" XSS")]),t._v(" "),a("h3",{attrs:{id:"xss是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss是什么"}},[t._v("#")]),t._v(" XSS是什么")]),t._v(" "),a("p",[t._v("XSS是一种经常出现在web应用中的计算机安全漏洞，它允许恶意web用户将代码植入到提供给其它用户使用的页面中。"),a("br"),t._v("\n比如这些代码包括HTML代码和客户端脚本。攻击者利用XSS漏洞旁路掉访问控制——例如同源策略(same origin policy)。"),a("br"),t._v("\n这种类型的漏洞由于被黑客用来编写危害性更大的网络钓鱼(Phishing)攻击而变得广为人知。"),a("br"),t._v("\n对于跨站脚本攻击，黑客界共识是：跨站脚本攻击是新型的“缓冲区溢出攻击“，而JavaScript是新型的“ShellCode”。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("示例：\n<script>alert(document.cookie)<\/script>\n")])])]),a("h3",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),a("p",[t._v("能注入恶意的HTML/JavaScript代码到用户浏览的网页上，从而达到Cookie资料窃取、会话劫持、钓鱼欺骗等攻击。\n<攻击代码不一定（非要）在 "),a("script"),t._v(" 中>")]),t._v(" "),a("h3",{attrs:{id:"原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原因"}},[t._v("#")]),t._v(" 原因")]),t._v(" "),a("ul",[a("li",[t._v("Web浏览器本身的设计不安全。浏览器能解析和执行JS等代码，但是不会判断该数据和程序代码是否恶意。")]),t._v(" "),a("li",[t._v("输入和输出是Web应用程序最基本的交互，而且网站的交互功能越来越丰富。如果在这过程中没有做好安全防护，很容易会出现XSS漏洞。")]),t._v(" "),a("li",[t._v("程序员水平参差不齐，而且大都没有过正规的安全培训，没有相关的安全意识。")]),t._v(" "),a("li",[t._v("XSS攻击手段灵活多变。")])]),t._v(" "),a("h3",{attrs:{id:"危害"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#危害"}},[t._v("#")]),t._v(" 危害")]),t._v(" "),a("ul",[a("li",[t._v("盗取各类用户帐号，如机器登录帐号、用户网银帐号、各类管理员帐号")]),t._v(" "),a("li",[t._v("控制企业数据，包括读取、篡改、添加、删除企业敏感数据的能力")]),t._v(" "),a("li",[t._v("盗窃企业重要的具有商业价值的资料")]),t._v(" "),a("li",[t._v("非法转账")]),t._v(" "),a("li",[t._v("强制发送电子邮件")]),t._v(" "),a("li",[t._v("网站挂马")]),t._v(" "),a("li",[t._v("控制受害者机器向其它网站发起攻击")])]),t._v(" "),a("h3",{attrs:{id:"如何防范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何防范"}},[t._v("#")]),t._v(" 如何防范")]),t._v(" "),a("ul",[a("li",[t._v("将重要的cookie标记为http only, 这样的话Javascript 中的document.cookie语句就不能获取到cookie了.")]),t._v(" "),a("li",[t._v("表单数据规定值的类型，例如：年龄应为只能为int、name只能为字母数字组合。。。。")]),t._v(" "),a("li",[t._v("对数据进行Html Encode 处理")]),t._v(" "),a("li",[t._v("过滤或移除特殊的Html标签， 例如: "),a("code",[t._v("<script>, <iframe> , &lt; for <, &gt; for >, &quot for")])]),t._v(" "),a("li",[t._v('过滤JavaScript 事件的标签。例如 "onclick=", "onfocus" 等等。')])]),t._v(" "),a("p",[t._v("参考资料：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6844903685122703367",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端安全系列（一）：如何防止XSS攻击？"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"csrf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[t._v("#")]),t._v(" CSRF")]),t._v(" "),a("p",[t._v("CSRF（Cross-site request forgery）跨站请求伪造，也被称为“One Click Attack”或者Session Riding，通常缩写为CSRF或者XSRF，是一种对网站的恶意利用。尽管听起来像跨站脚本（XSS），但它与XSS非常不同，XSS利用站点内的信任用户，而CSRF则通过伪装来自受信任用户的请求来利用受信任的网站。与XSS攻击相比，CSRF攻击往往不大流行（因此对其进行防范的资源也相当稀少）和难以防范，所以被认为比XSS更具危险性。")]),t._v(" "),a("h3",{attrs:{id:"特点-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点-2"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),a("ul",[a("li",[t._v("攻击一般发起在第三方网站，而不是被攻击的网站。被攻击的网站无法防止攻击发生。")]),t._v(" "),a("li",[t._v("攻击利用受害者在被攻击网站的登录凭证，冒充受害者提交操作；而不是直接窃取数据。")]),t._v(" "),a("li",[t._v("整个过程攻击者并不能获取到受害者的登录凭证，仅仅是“冒用”。")]),t._v(" "),a("li",[t._v("跨站请求可以用各种方式：图片URL、超链接、CORS、Form提交等等。部分请求方式可以直接嵌入在第三方论坛、文章中，难以进行追踪。")])]),t._v(" "),a("h3",{attrs:{id:"防御"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防御"}},[t._v("#")]),t._v(" 防御")]),t._v(" "),a("ul",[a("li",[t._v("通过referer、token、Cookie 的 SameSite 属性来检测用户提交。")]),t._v(" "),a("li",[t._v("尽量不要在页面的链接中暴露用户隐私信息。")]),t._v(" "),a("li",[t._v("对于用户修改删除等操作最好都使用post操作 。")]),t._v(" "),a("li",[t._v("避免全站通用的cookie，严格设置cookie的域。")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5bc009996fb9a05d0a055192",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端安全系列之二：如何防止CSRF攻击？"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"csp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csp"}},[t._v("#")]),t._v(" CSP")]),t._v(" "),a("p",[t._v("CSP通过指定有效域——即浏览器认可的可执行脚本的有效来源——使服务器管理者有能力减少或消除XSS攻击所依赖的载体。")]),t._v(" "),a("p",[t._v("一个CSP兼容的浏览器将会仅执行从白名单域获取到的脚本文件，忽略所有的其他脚本 (包括内联脚本和HTML的事件处理属性)。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP",target:"_blank",rel:"noopener noreferrer"}},[t._v("内容安全策略( CSP )"),a("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=s.exports}}]);