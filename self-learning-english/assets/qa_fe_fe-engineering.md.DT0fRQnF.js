import{_ as e,c as n,o as i,a4 as t}from"./chunks/framework.BGd1GqLd.js";const h=JSON.parse('{"title":"前端工程","description":"","frontmatter":{"title":"前端工程"},"headers":[],"relativePath":"qa/fe/fe-engineering.md","filePath":"qa/fe/fe-engineering.md"}'),o={name:"qa/fe/fe-engineering.md"},a=t('<ol><li><a href="#what-is-front-end-engineering-what-benefits-does-it-bring">What is front-end engineering? What benefits does it bring?</a></li><li><a href="#could-you-share-one-of-your-proudest-implementations-or-improvements-in-engineering">Could you share one of your proudest implementations or improvements in engineering?</a></li></ol><h2 id="what-is-front-end-engineering-what-benefits-does-it-bring" tabindex="-1">What is front-end engineering? What benefits does it bring? <a class="header-anchor" href="#what-is-front-end-engineering-what-benefits-does-it-bring" aria-label="Permalink to &quot;What is front-end engineering? What benefits does it bring?&quot;">​</a></h2><p>Front-end engineering is the application of software engineering principles and methodologies to front-end development. In other words, the goal of front-end engineering is to improve the quality of front-end software, increase team development efficiency, and reduce development costs. More specifically, setting team specifications, build packaging, performance optimization, and CI/CD can all be considered part of front-end engineering, as they fundamentally aim to enhance development efficiency and software quality.</p><details><summary>查看中文</summary> 什么是前端工程化？它带来了哪些好处？ <p>前端工程化其实就是把软件工程的思想和方法论应用到前端上，换句话说，前端工程化的目的就是提高前端软件的质量、团队的开发效率以及降低开发成本。具体一点说的话，制定团队规范、构建打包、性能优化、ci/cd 都可以算是前端工程化的范围，因为它们本质上都是为了提高开发效率和软件质量。</p></details><h2 id="could-you-share-one-of-your-proudest-implementations-or-improvements-in-engineering" tabindex="-1">Could you share one of your proudest implementations or improvements in engineering? <a class="header-anchor" href="#could-you-share-one-of-your-proudest-implementations-or-improvements-in-engineering" aria-label="Permalink to &quot;Could you share one of your proudest implementations or improvements in engineering?&quot;">​</a></h2><p>Sure, I&#39;m particularly proud of improvements in CI/CD. This includes a few aspects: First, automatic code checks and fixes are triggered when code is submitted. Then, after code merges, GitLab CI packages it into a Docker image and deploys it to Kubernetes. This reduces manual work and boosts development efficiency.</p><p>Another aspect is the establishment and promotion of team technical specifications. This helps improve the quality of our code and the efficiency of our collaboration.</p><details><summary>查看中文</summary> 能否分享一下您在工程化方面最自豪的改进或实现？ <p>可以的，我觉得主要是 ci/cd 方面的改进，这包含了几个方面：首先是提交代码时自动触发代码校验和自动修复；然后是合并代码后通过 gitlab ci 打包成 docker 镜像并部署到 k8s，这样可以减少人工操作，提高开发效率。</p><p>另外还有团队技术规范的制定和推广，这可以帮助提高团队的代码质量和协作效率。</p></details>',8),r=[a];function s(d,c,l,f,m,p){return i(),n("div",null,r)}const u=e(o,[["render",s]]);export{h as __pageData,u as default};
